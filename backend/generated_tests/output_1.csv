Question,Option A,Option B,Option C,Option D,Correct Option,Subtopic,Subtopic Detail,Difficulty
What is the main goal of time complexity analysis?,a. To measure the space required by an algorithm.,b. To determine the best data structure for a problem.,c. To analyze the running time of an algorithm.,d. To improve the coding style of a program.,c. To analyze the running time of an algorithm.,Introduction to Time Complexity,Definition of Time Complexity,e
Which of the following time complexities represents a constant time algorithm?,a. O(n),b. O(2^n),c. O(log n),d. O(1),d. O(1),Big O Notation,Constant Time Complexity,m
Consider a recursive function that breaks down a problem of size n into two sub-problems of size n/2. What is the time complexity of this recursive function?,a. O(n^2),b. O(n log n),c. O(log n),d. O(n),b. O(n log n),Master Theorem,Divide and Conquer Recursive Functions,m
Which of the following statements is true about space complexity?,a. Space complexity is always more than time complexity.,b. Space complexity is only considered for recursive functions.,c. Space complexity represents the maximum memory used by an algorithm.,d. Space complexity is only measured in terms of the input size.,c. Space complexity represents the maximum memory used by an algorithm.,Space Complexity,Definition of Space Complexity,m
"Consider a dynamic programming algorithm that has a 2D array of size n x n to store intermediate results. If the time complexity of this algorithm is O(n^3), what is the space complexity?",a. O(n),b. O(n^2),c. O(n^3),d. O(log n),b. O(n^2),Space Complexity,Analyzing Space Complexity of Dynamic Programming,h
What is the most common operation performed on an array?,a. Insertion,b. Deletion,c. Traversal,d. Searching,c. Traversal,Arrays,Basic Operations on Arrays,e
Which of the following data structures is most suitable for frequent insertion and deletion operations?,a. Array,b. Linked List,c. Stack,d. Queue,b. Linked List,Linked Lists,Advantages of Linked Lists,m
What is the time complexity of accessing an element in an array by its index?,a. O(n),b. O(log n),c. O(1),d. O(n^2),c. O(1),Arrays,Time Complexity of Array Operations,m
"A dynamic array, also known as a growable array, is a contiguous block of memory that can:",a. Only decrease in size,b. Only increase in size,c. Dynamically increase or decrease in size,d. Never change in size,c. Dynamically increase or decrease in size,Arrays,Dynamic Arrays,h
Consider a linked list node with an integer data field and a pointer to the next node. What is the minimum number of pointers required to implement a singly linked list?,a. 1,b. 2,c. 3,d. 4,a. 1,Linked Lists,Implementation of Singly Linked Lists,h
What is the primary purpose of a stack data structure?,a. To store data in a random order.,b. To manage data in a Last-In-First-Out (LIFO) order.,c. To manage data in a First-In-First-Out (FIFO) order.,d. To store large amounts of data.,b. To manage data in a Last-In-First-Out (LIFO) order.,Stack Data Structure,Definition and Purpose of Stacks,e
What is the term used to describe the process of adding an element to a queue?,a. Dequeue,b. Enqueue,c. Delete,d. Insert,b. Enqueue,Queue Operations,Enqueue and Dequeue Operations,m
Which of the following is a common real-world application of stacks?,a. Managing a database of customer records.,b. Evaluating postfix expressions.,c. Sorting large datasets.,d. Finding the shortest path in a graph.,b. Evaluating postfix expressions.,Stack Applications,Evaluating Postfix Expressions,m
What is the time complexity of inserting an element into a queue implemented using a linked list?,a. O(1),b. O(n),c. O(log n),d. O(n^2),a. O(1),Queue Implementation,Time Complexity of Queue Operations,h
"Suppose we have a stack of integers with the following operations: push(5), push(10), push(15), pop(), push(20). What is the top element of the stack after these operations?",a. 5,b. 10,c. 15,d. 20,d. 20,Stack Operations,Evaluating Stack Operations,h
What is the main purpose of hashing in data structures?,a. To sort data in ascending order.,b. To search data efficiently using a hash function.,c. To store data in a linked list.,d. To traverse data in a tree-like structure.,b. To search data efficiently using a hash function.,Introduction to Hashing,definition of hashing,e
What is a collision in the context of hashing?,a. When two keys hash to the same index.,b. When two keys hash to different indices.,c. When a hash function returns null.,d. When a hash table is full.,a. When two keys hash to the same index.,Collision Resolution,definition of collision,m
Which of the following is a common technique used to handle collisions in hash tables?,a. Linear probing,b. Binary search,c. AVL tree balancing,d. Quick sort,a. Linear probing,Collision Resolution Techniques,linear probing,m
What is the load factor of a hash table?,a. The number of keys in the table.,b. The number of empty slots in the table.,c. The ratio of the number of keys to the table size.,d. The ratio of the table size to the number of keys.,c. The ratio of the number of keys to the table size.,Hash Table Performance,load factor formula,h
What is the time complexity of searching for an element in a hash table with a good hash function?,a. O(n),b. O(log n),c. O(1),d. O(n^2),c. O(1),Hash Table Performance,average case search time,h
What is the basic idea behind recursive functions?,a. To use loops to solve a problem.,b. To break down a problem into smaller sub-problems.,c. To solve a problem using dynamic programming.,d. To use iterative approach to solve a problem.,b. To break down a problem into smaller sub-problems.,,Basic Concept of Recursion,e
Which of the following is a common type of recursive function?,a. Linear recursion,b. Tree recursion,c. Dynamic programming,d. All of the above,d. All of the above,,Types of Recursive Functions,m
What is the role of the base case in a recursive function?,a. To ensure the function calls itself indefinitely.,b. To provide a stopping point for the recursion.,c. To calculate the solution to the problem.,d. To optimize the performance of the function.,b. To provide a stopping point for the recursion.,Recursive Functions,Base Case and Recursive Case,m
Why is it important to ensure that a recursive function has a base case?,a. To avoid stack overflow errors.,b. To improve the performance of the function.,c. To make the function more readable.,d. To reduce the complexity of the function.,a. To avoid stack overflow errors.,,Importance of Base Case,h
"What is the time complexity of a recursive function with a tree recursion type, where each node has two children and the function calls itself recursively on each child?",a. O(n),b. O(n log n),c. O(2^n),d. O(n^2),c. O(2^n),,Calculating Time Complexity of Tree Recursion,h
