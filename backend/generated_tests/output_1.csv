Question,Option A,Option B,Option C,Option D,Correct Option,Subtopic,Subtopic Detail,Difficulty
What is the goal of time complexity analysis?,To measure the amount of memory used by an algorithm.,To compare the performance of different algorithms.,To determine the best data structure to use.,To optimize the code for better execution time.,To compare the performance of different algorithms.,Time Complexity Analysis,Purpose of Time Complexity Analysis,e
Which of the following time complexities represents an algorithm with exponential growth?,O(n),O(n log n),O(2^n),O(n^2),O(2^n),Time Complexity Notations,,m
What is the time complexity of the following function: `f(n) = 2*f(n-1) + c`?,O(n),O(2^n),O(n log n),O(n^2),O(2^n),Recurrence Relations,Solving Recurrence Relations,m
"Consider a program that iterates through a list of n elements, and within the loop, it performs a constant-time operation and recursively calls itself n/2 times. What is the time complexity of this program?",O(n log n),O(n^2),O(2^n),O(n),O(n log n),Recurrence Relations,Solving Complex Recurrence Relations,h
Prove that the time complexity of the following function is O(n log n): `f(n) = 2*f(n/2) + n`. Assume that n is a power of 2.,,"(Note: This question requires a detailed proof, involving solving the recurrence relation and applying the Master Theorem.)",,The time complexity is O(n^2) because the function calls itself recursively.,The time complexity is O(n log n) because the function exhibits a logarithmic number of recursive calls.,Master Theorem,Applying the Master Theorem to Solve Recurrence Relations,h
What is an Array?,A collection of similar data types stored in non-contiguous memory locations.,A collection of dissimilar data types stored in contiguous memory locations.,A collection of similar data types stored in contiguous memory locations.,A collection of dissimilar data types stored in non-contiguous memory locations.,A collection of similar data types stored in contiguous memory locations.,Arrays,Definition of Arrays,e
Which of the following is a disadvantage of using Arrays?,They are flexible in size.,They waste memory space for unused elements.,They are slow in accessing elements.,They do not support dynamic memory allocation.,They waste memory space for unused elements.,Arrays,Disadvantages of Arrays,m
What is the time complexity of accessing an element in an Array?,O(n),O(1),O(log n),O(n^2),O(1),Arrays,Accessing Elements in Arrays,m
What is the main advantage of using a Linked List over an Array?,Faster access time for elements.,More memory efficient for storing large datasets.,Efficient insertion and deletion of elements.,Easier implementation of dynamic memory allocation.,Efficient insertion and deletion of elements.,Linked Lists,Advantages of Linked Lists,m
"Given a singly Linked List with N nodes, what is the time complexity of finding the middle element?",O(N/2),O(log N),O(N),O(1),O(N),Linked Lists,Operations on Linked Lists,h
What is the primary purpose of a stack data structure?,To store a collection of elements in a random order.,To implement a recursive function call.,To manage a collection of elements in a Last-In-First-Out (LIFO) manner.,To search for a specific element in a dataset.,To manage a collection of elements in a Last-In-First-Out (LIFO) manner.,Stack,Definition of Stack,e
Which of the following operations is NOT a standard operation on a queue data structure?,Enqueue,Dequeue,Peek,Sort,Sort,Queue,Queue Operations,e
"Consider a stack with elements {1, 2, 3, 4, 5} pushed in that order. If we pop two elements from the stack, what are the resulting elements?","{3, 4, 5}","{1, 2, 3}","{1, 2}","{4, 5}","{3, 4, 5}",Stack,Stack Operations,m
What is the time complexity of implementing a queue using a linked list?,O(1),O(n),O(log n),O(n^2),O(1),Queue,Implementation of Queue,m
Suppose we implement a stack using a dynamic array. What is the time complexity of the resize operation when the array needs to be doubled in size?,O(1),O(n),O(log n),amortized O(1),amortized O(1),Stack,Dynamic Array Implementation,h
What is the basic idea behind hashing in data structures?,To store data in a tree-like structure.,To store data in a sorted array.,To map a large input space to a smaller output space.,To store data in a linked list.,To map a large input space to a smaller output space.,Introduction to Hashing,Definition of Hashing,e
What is the purpose of a hash function in a hash table?,To retrieve data from the table.,To insert data into the table.,To map a key to a specific index in the table.,To delete data from the table.,To map a key to a specific index in the table.,Hash Functions,Role of Hash Functions,m
What is the term for the situation where two different keys hash to the same index in a hash table?,Collision,Overflow,Underflow,Hashing,Collision,Collision Resolution,Definition of Collision,m
Which of the following collision resolution techniques is used to store multiple values at the same index in a hash table?,Chaining,Open Addressing,Hashing,Sorting,Chaining,Collision Resolution,Chaining Technique,h
What is the average time complexity of a successful search operation in a hash table with an effective collision resolution technique?,O(n),O(1),O(log n),O(n/2),O(1),Time Complexity of Hash Tables,Average Time Complexity of Search,h
What is the main purpose of the base case in a recursive function?,To calculate the result of the function.,To call the function itself again.,To stop the recursive calls and prevent a stack overflow.,To initialize the function's variables.,To stop the recursive calls and prevent a stack overflow.,Recursive Functions,Base Case,e
A recursive function is called to calculate the factorial of a number. How many times will the function be called if the input number is 5?,4 times,5 times,6 times,10 times,5 times,Recursive Functions,Recursive Calls,m
What is the primary difference between a recursive function and an iterative function?,The way they handle errors.,The way they use memory.,The way they solve the problem.,The way they are implemented.,The way they solve the problem.,Recursive Functions,Comparing Recursion and Iteration,m
"Given a recursive function that calculates the sum of all elements in an array, how would you modify the function to calculate the product of all elements instead?",By changing the addition operator to a multiplication operator.,By changing the initial value of the sum to 1 instead of 0.,By adding an extra recursive call.,By using a different data structure.,By changing the addition operator to a multiplication operator.,Recursive Functions,Modifying Recursive Functions,h
A recursive function is called to generate all possible permutations of a string. What is the time complexity of this function?,O(n),O(n^2),O(n!),O(2^n),O(n!),Recursive Backtracking,Time Complexity of Recursive Backtracking,h
