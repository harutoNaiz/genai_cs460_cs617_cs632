Here are 5 multiple choice questions on Fundamentals of Operating Systems under Introduction to Operating Systems:

**Question 1**
What is the main function of an Operating System?
a. To perform arithmetic operations
b. To manage hardware and software resources
c. To develop applications
d. To connect devices to the internet

**Correct answer: b. To manage hardware and software resources**
**Subtopic: Operating System Definition**
**What in that subtopic exactly: Role of OS**
**Difficulty: e**

**Question 2**
Which of the following is NOT a characteristic of an Operating System?
a. Portability
b. Security
c. Efficiency
d. Compiler

**Correct answer: d. Compiler**
**Subtopic: Operating System Characteristics**
**What in that subtopic exactly: Key Features of OS**
**Difficulty: m**

**Question 3**
What is the term for the programs that manage the interaction between the user and the computer hardware?
a. Device drivers
b. System calls
c. Interrupt handlers
d. User-space programs

**Correct answer: a. Device drivers**
**Subtopic: OS Components**
**What in that subtopic exactly: Device Management**
**Difficulty: m**

**Question 4**
What is the concept of allowing multiple programs to share the CPU time, where each program is executed for a short period of time?
a. Multithreading
b. Multiprocessing
c. Time sharing
d. Virtual memory

**Correct answer: c. Time sharing**
**Subtopic: Types of Operating Systems**
**What in that subtopic exactly: Time-sharing Systems**
**Difficulty: h**

**Question 5**
What is the term for the technique of dividing the physical memory into small, fixed-size blocks to allocate memory to processes?
a. Fragmentation
b. Paging
c. Segmentation
d. Swapping

**Correct answer: b. Paging**
**Subtopic: Memory Management**
**What in that subtopic exactly: Memory Allocation Techniques**
**Difficulty: h**
Here are 5 multiple-choice questions on Fundamentals of Operating Systems under Operating System Architecture:

**Question 1**
What is the primary function of an Operating System?
a. To manage computer hardware.
b. To develop application software.
c. To connect to the internet.
d. To perform arithmetic operations.

**Correct answer: a. To manage computer hardware.**
**Subtopic: Introduction to Operating Systems**
**What in that subtopic exactly: Role of Operating System**
**Difficulty: e**

**Question 2**
Which of the following is a characteristic of a Multiprogramming Operating System?
a. One program executes at a time.
b. Multiple programs execute concurrently.
c. The OS manages only one type of resource.
d. The OS is responsible for connecting devices.

**Correct answer: b. Multiple programs execute concurrently.**
**Subtopic: Types of Operating Systems**
**What in that subtopic exactly: Characteristics of Multiprogramming**
**Difficulty: m**

**Question 3**
What is the main goal of a Process Scheduler in an Operating System?
a. To allocate memory to processes.
b. To manage file input/output operations.
c. To allocate CPU time to processes.
d. To manage network connections.

**Correct answer: c. To allocate CPU time to processes.**
**Subtopic: Process Management**
**What in that subtopic exactly: Role of Process Scheduler**
**Difficulty: m**

**Question 4**
In an Interrupt-Driven I/O architecture, what triggers an interrupt?
a. Completion of I/O operation.
b. Arrival of I/O request.
c. Execution of an instruction.
d. Termination of a process.

**Correct answer: a. Completion of I/O operation.**
**Subtopic: I/O Management**
**What in that subtopic exactly: Interrupt-Driven I/O**
**Difficulty: h**

**Question 5**
What is the primary benefit of using a Microkernel Architecture in Operating System design?
a. Improved process scheduling.
b. Enhanced I/O management.
c. Better support for multiprocessing.
d. Increased modularity and scalability.

**Correct answer: d. Increased modularity and scalability.**
**Subtopic: Operating System Architecture**
**What in that subtopic exactly: Microkernel Architecture**
**Difficulty: h**
Here are 5 multiple choice questions on Fundamentals of Operating Systems under Processes and Threads:

**Question 1**
What is a process in the context of operating systems?
a. A program in execution with its own memory space.
b. A thread of execution within a program.
c. A type of data structure used in scheduling.
d. A way of inter-process communication.

**Correct answer: a. A program in execution with its own memory space.**
**Subtopic: Process**
**What in that subtopic exactly: Definition of Process**
**Difficulty: e**

**Question 2**
Which of the following is a characteristic of a thread?
a. It has its own memory space.
b. It has its own program counter.
c. It has its own CPU.
d. It shares memory with other threads.

**Correct answer: d. It shares memory with other threads.**
**Subtopic: Threads**
**What in that subtopic exactly: Characteristics of Threads**
**Difficulty: m**

**Question 3**
What is the main difference between a process and a thread?
a. A process is smaller than a thread.
b. A process has its own memory space, whereas a thread shares memory.
c. A process is used for I/O operations, whereas a thread is used for CPU-intensive tasks.
d. A process is used for multi-programming, whereas a thread is used for multi-threading.

**Correct answer: b. A process has its own memory space, whereas a thread shares memory.**
**Subtopic: Process vs Thread**
**What in that subtopic exactly: Difference between Process and Thread**
**Difficulty: m**

**Question 4**
What is the purpose of the PCB (Process Control Block)?
a. To manage memory allocation for a process.
b. To schedule processes.
c. To maintain information about a process.
d. To facilitate communication between processes.

**Correct answer: c. To maintain information about a process.**
**Subtopic: Process Control Block**
**What in that subtopic exactly: Function of PCB**
**Difficulty: m**

**Question 5**
What is the term for the process of creating a new process from an existing one?
a. Process migration.
b. Process scheduling.
c. Process synchronization.
d. Processforking.

**Correct answer: d. Process forking.**
**Subtopic: Process Creation**
**What in that subtopic exactly: Process Forking**
**Difficulty: h**
Here are five multiple-choice questions on System Calls and APIs under Fundamentals of Operating Systems:

**Question 1**
What is the primary purpose of system calls in an operating system?
a. To manage memory allocation
b. To provide a interface between the OS and application programs
c. To handle hardware interrupts
d. To schedule processes

**Correct answer: b. To provide a interface between the OS and application programs**
**Subtopic: System Calls**
**What in that subtopic exactly: Purpose of System Calls**
**Difficulty: e**

**Question 2**
Which of the following is an example of a process control system call?
a. read()
b. fork()
c. printf()
d. malloc()

**Correct answer: b. fork()**
**Subtopic: System Calls**
**What in that subtopic exactly: Process Control System Calls**
**Difficulty: m**

**Question 3**
What is the difference between a system call and an API?
a. A system call is a set of libraries, while an API is a set of rules
b. A system call is a function, while an API is a set of functions
c. A system call provides a interface to the OS, while an API provides a interface to a software application
d. A system call is used for user-level interactions, while an API is used for kernel-level interactions

**Correct answer: c. A system call provides a interface to the OS, while an API provides a interface to a software application**
**Subtopic: APIs**
**What in that subtopic exactly: Difference between System Calls and APIs**
**Difficulty: m**

**Question 4**
Which of the following system calls is used to request a service from the operating system that is not related to process management or file management?
a. fork()
b. exec()
c. wait()
d. ioctl()

**Correct answer: d. ioctl()**
**Subtopic: System Calls**
**What in that subtopic exactly: Device Management System Calls**
**Difficulty: h**

**Question 5**
What is the name of the table that maps a system call number to the corresponding kernel function in a Unix-like operating system?
a. System Call Vector
b. System Call Table
c. Kernel Function Table
d. syscall vector

**Correct answer: d. syscall vector**
**Subtopic: System Calls**
**What in that subtopic exactly: System Call Implementation**
**Difficulty: h**
Here are five multiple choice questions on Fundamentals of Operating Systems under Interrupts and Scheduling:

**Question 1**
What is an interrupt in the context of Operating Systems?
a. A routine that performs a specific task
b. A signal to the CPU to stop executing the current process
c. A way to allocate memory to a process
d. A technique to avoid deadlock

**Correct answer: b. A signal to the CPU to stop executing the current process**
**Subtopic: Interrupts**
**What in that subtopic exactly: Definition of Interrupts**
**Difficulty: e**

**Question 2**
Which of the following is a type of interrupt?
a. Programmed I/O
b. Vectored Interrupt
c. Spooling
d. Buffering

**Correct answer: b. Vectored Interrupt**
**Subtopic: Interrupts**
**What in that subtopic exactly: Types of Interrupts**
**Difficulty: m**

**Question 3**
In Round Robin Scheduling, what is the function of the timer?
a. To allocate memory to a process
b. To switch between processes
c. To terminate a process
d. To interrupt the current process

**Correct answer: d. To interrupt the current process**
**Subtopic: Scheduling Algorithms**
**What in that subtopic exactly: Round Robin Scheduling**
**Difficulty: m**

**Question 4**
What is the main advantage of using multi-level feedback queues in scheduling?
a. It minimizes the average waiting time
b. It maximizes the throughput
c. It is highly flexible and can be tailored to different system requirements
d. It is the simplest scheduling algorithm

**Correct answer: c. It is highly flexible and can be tailored to different system requirements**
**Subtopic: Scheduling Algorithms**
**What in that subtopic exactly: Multilevel Feedback Queues**
**Difficulty: h**

**Question 5**
In the context of Scheduling, what is the main difference between a process and a thread?
a. A process has its own memory space, while a thread shares it with other threads
b. A thread has its own memory space, while a process shares it with other processes
c. A process has higher priority than a thread
d. A thread has higher priority than a process

**Correct answer: a. A process has its own memory space, while a thread shares it with other threads**
**Subtopic: Process Management**
**What in that subtopic exactly: Processes and Threads**
**Difficulty: h**
